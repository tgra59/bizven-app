rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      // Allow read/write access to a user's own document
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow public read access to limited fields for all users
      allow read: if request.auth != null && 
          request.resource.data.keys().hasOnly(['displayName', 'photoURL']);
    }
    
    // Projects collection
    match /projects/{projectId} {
      // Allow read access if user is a member
      allow read: if request.auth != null && 
          exists(/databases/$(database)/documents/projects/$(projectId)) &&
          request.auth.uid in resource.data.members;
      
      // Allow write access if user is the owner
      allow write: if request.auth != null && 
          (
            !exists(/databases/$(database)/documents/projects/$(projectId)) ||
            resource.data.ownerId == request.auth.uid
          );
    }
    
    // Sessions collection
    match /sessions/{sessionId} {
      // Allow read access if user is a member of the project or the session creator
      allow read: if request.auth != null && 
          (
            request.auth.uid == resource.data.userId ||
            request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.members
          );
      
      // Allow write access if user is the session creator
      allow write: if request.auth != null && 
          (
            !exists(/databases/$(database)/documents/sessions/$(sessionId)) ||
            resource.data.userId == request.auth.uid
          );
    }
    
    // Invitations collection
    match /invitations/{invitationId} {
      // Allow read access if user is the invitee or inviter
      allow read: if request.auth != null && 
          (
            request.auth.uid == resource.data.inviteeId ||
            request.auth.uid == resource.data.inviterId
          );
      
      // Allow creation if user is a member of the project
      allow create: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.members;
      
      // Allow updates if user is the invitee (to accept/reject)
      allow update: if request.auth != null && 
          request.auth.uid == resource.data.inviteeId &&
          resource.data.status == "pending" &&
          request.resource.data.status in ["accepted", "rejected"];
    }
  }
}