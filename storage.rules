rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Profile images
    match /profile_images/{userId}/{fileName} {
      // Allow upload only for the owner and download for all
      allow read;
      allow write: if request.auth != null && 
          request.auth.uid == userId.split('_')[1] && 
          request.resource.size < 5 * 1024 * 1024 && // 5MB
          request.resource.contentType.matches('image/.*');
    }
    
    // Project attachments
    match /project_files/{projectId}/{fileName} {
      // Allow access only for project members
      allow read, write: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/projects/$(projectId)).data.members &&
          request.resource.size < 10 * 1024 * 1024; // 10MB
    }
    
    // Session attachments
    match /session_files/{sessionId}/{fileName} {
      // Allow access for the session creator or project members
      allow read, write: if request.auth != null && 
          (
            request.auth.uid == get(/databases/$(database)/documents/sessions/$(sessionId)).data.userId ||
            request.auth.uid in get(/databases/$(database)/documents/projects/$(get(/databases/$(database)/documents/sessions/$(sessionId)).data.projectId)).data.members
          ) &&
          request.resource.size < 20 * 1024 * 1024; // 20MB
    }
    
    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}